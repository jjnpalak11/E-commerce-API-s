{
    "swagger": "2.0",
    "info": {
      "title": "E-commerce Website API",
      "description": "API documentation for an e-commerce website built with Node.js, Express, and MongoDB.",
      "version": "1.0.0"
    },
    "host": "localhost:5000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/products": {
        "get": {
          "summary": "Get all products",
          "tags": [
            "Products"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new product",
          "tags": [
            "Products"
          ],
          "parameters": [
            {
              "name": "product",
              "in": "body",
              "description": "Product object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Product created successfully"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/products/{id}": {
        "get": {
          "summary": "Get a product by ID",
          "tags": [
            "Products"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the product",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Product"
              }
            },
            "404": {
              "description": "Product not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a product",
          "tags": [
            "Products"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the product",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "Product deleted successfully"
            },
            "404": {
              "description": "Product not found"
            }
          }
        }
      },
      "/orders": {
        "get": {
          "summary": "Get all orders",
          "tags": [
            "Orders"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Order"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new order",
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "order",
              "in": "body",
              "description": "Order object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Order"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Order created successfully"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/orders/{id}": {
        "get": {
          "summary": "Get an order by ID",
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the order",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "404": {
              "description": "Order not found"
            }
          }
        },
        "delete": {
          "summary": "Delete an order",
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the order",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "Order deleted successfully"
            },
            "404": {
              "description": "Order not found"
            }
          }
        }
      },
      "/users": {
        "get": {
          "summary": "Get all users",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get a user by ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a user",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "definitions": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "availability": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
         "quantity":{
            "type":"number"
         }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }